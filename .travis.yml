sudo: required

branches:
  only:
    - develop
    - master

services:
  - docker

env:
  global:
    - PATH_APP: web/
    - MYSQL_DATABASE: test
    - MYSQL_ROOT_PASSWORD: root
    - MYSQL_USER: dev
    - MYSQL_PASSWORD: dev
    - APP_ENV: test
    - DATABASE_URL: mysql://dev:dev@mysql:3306/test
    - SYMFONY_DEPRECATIONS_HELPER: disabled
    - JWT_SECRET_KEY: $PATH_APP/config/jwt/private.pem
    - JWT_PUBLIC_KEY: $PATH_APP/config/jwt/public.pem
    - JWT_PASSPHRASE: s$cretf0rt3st
    - JWT_TOKENTTL: 3600

cache:
  directories:
    - $HOME/.composer/cache

before_install:
  - cp .env.dist .env
  - cp $PATH_APP/.env.dist $PATH_APP/.env
  - cp $PATH_APP/phpunit.xml.dist $PATH_APP/phpunit.xml
  - openssl genrsa -passout pass:$JWT_PASSPHRASE -out $JWT_SECRET_KEY -aes256 4096
  - openssl rsa -pubout -in $JWT_SECRET_KEY -passin pass:$JWT_PASSPHRASE -out $JWT_PUBLIC_KEY

install:
  - docker-compose up -d
  - docker-compose ps

before_script:
  - docker-compose run phpfpm composer update
  - docker-compose run phpfpm php bin/console doctrine:database:drop --force
  - docker-compose run phpfpm php bin/console doctrine:database:create
  - docker-compose run phpfpm php bin/console doctrine:schema:update --force
  - docker-compose run phpfpm php bin/console doctrine:fixtures:load --no-interaction

script:
  - docker-compose run phpfpm phpunit tests
